
/**
 * LinkedList İmplementasyonu 
 * Bu yapı sadece single linked list'tir.
 * tarih 17.04.2018
 * 
 *
 */
class Node{
	public int value;
	public Node next;

	public Node(int value) {
		this.value=value;
		this.next=null;
	}


}

//singly linked list yapısı
public class SinglyLinkedList {

	Node head=null;
	Node tail=null;
	Node current=null;

	// add metodu listenin sonuna ekleme yapar
	public void add(int value) {
		Node newNode=new Node(value);

		if(head==null) {
			head=newNode;
			tail=newNode;
		}

		else {
			current=head;
			while(current.next!=null) {
				current=current.next;
			}
			current.next=newNode;
			tail=newNode;

		}

	}


	public void remove(int index) {
		current=head;
		int listsize=0;
		Node indis=head;
		
		//listenin size'ı belirlenir,böylece index fazla yollanırsa return edilir
		while(indis.next!=null) {
			listsize++;
			indis=indis.next;
			
		}
		
		if(index > listsize) {
			return;
		}
		
		//listede eleman yoksa
		else if(head==null) {
			return;
		}
		
		//head silinecek
		else if(index==0) {
			head=head.next;
		}
		
		else {
			int list_indis=1;
			while(list_indis!=index) {
				current=current.next;
				list_indis++;
			}
			current.next=current.next.next;
			
		}
		
		

	}

	public void insert(int value,int index) {

		Node newNode=new Node(value);
		current=head;
		int currentIndex=0;
		
		if(index==0) {
			// newNode must be the new head
			newNode.next=head;
			head=newNode;
			if(head.next==null) {
				tail=head;
				// This is the only node in the list. Update also tail
			}
			return;
		}
		
		
		// If we reach this point, we are sure current is not null.
		// Iterate until current is the node before insertion point.
		while(currentIndex!=index-1 && current.next!=null) {
			
			current=current.next;
			currentIndex++;
		}
		
		//liste sonuna ekliyorsak
		if(current.next==null) {
			newNode.next=null;
			current.next=newNode;
			tail=newNode;
		}
		
		else {
			newNode.next=current.next;
			current.next=newNode;
			
		}
		
		

	}


	//listeyi ekrana yazdırır
	public String toString() {
		String result="[";


		if(head!=null) {
			current=head;
			while(current.next!=null) {
				result+=current.value +", ";
				current=current.next;
			}
			result+=current.value;
		}
		result+="]";
		return result;

	}



}
